=begin
#Mux API

#Mux is how developers build online video. This API encompasses both Mux Video and Mux Data functionality to help you build your video-related projects better and faster than ever before.

The version of the OpenAPI document: v1
Contact: devex@mux.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.0.1

=end

require 'spec_helper'
require 'json'

# Unit tests for MuxRuby::TranscriptionVocabulariesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'TranscriptionVocabulariesApi' do
  before do
    # run before each test
    @api_instance = MuxRuby::TranscriptionVocabulariesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of TranscriptionVocabulariesApi' do
    it 'should create an instance of TranscriptionVocabulariesApi' do
      expect(@api_instance).to be_instance_of(MuxRuby::TranscriptionVocabulariesApi)
    end
  end

  # unit tests for create_transcription_vocabulary
  # Create a Transcription Vocabulary
  # Create a new Transcription Vocabulary.
  # @param create_transcription_vocabulary_request 
  # @param [Hash] opts the optional parameters
  # @return [TranscriptionVocabularyResponse]
  describe 'create_transcription_vocabulary test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_transcription_vocabulary
  # Delete a Transcription Vocabulary
  # Deletes a Transcription Vocabulary. The Transcription Vocabulary&#39;s ID will be disassociated from any live streams using it. Transcription Vocabularies can be deleted while associated live streams are active. However, the words and phrases in the deleted Transcription Vocabulary will remain attached to those streams while they are active.
  # @param transcription_vocabulary_id The ID of the Transcription Vocabulary.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_transcription_vocabulary test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_transcription_vocabulary
  # Retrieve a Transcription Vocabulary
  # Retrieves the details of a Transcription Vocabulary that has previously been created. Supply the unique Transcription Vocabulary ID and Mux will return the corresponding Transcription Vocabulary information. The same information is returned when creating a Transcription Vocabulary.
  # @param transcription_vocabulary_id The ID of the Transcription Vocabulary.
  # @param [Hash] opts the optional parameters
  # @return [TranscriptionVocabularyResponse]
  describe 'get_transcription_vocabulary test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_transcription_vocabularies
  # List Transcription Vocabularies
  # List all Transcription Vocabularies.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit Number of items to include in the response
  # @option opts [Integer] :page Offset by this many pages, of the size of &#x60;limit&#x60;
  # @return [ListTranscriptionVocabulariesResponse]
  describe 'list_transcription_vocabularies test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_transcription_vocabulary
  # Update a Transcription Vocabulary
  # Updates the details of a previously-created Transcription Vocabulary. Updates to Transcription Vocabularies are allowed while associated live streams are active. However, updates will not be applied to those streams while they are active.
  # @param transcription_vocabulary_id The ID of the Transcription Vocabulary.
  # @param update_transcription_vocabulary_request 
  # @param [Hash] opts the optional parameters
  # @return [TranscriptionVocabularyResponse]
  describe 'update_transcription_vocabulary test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
