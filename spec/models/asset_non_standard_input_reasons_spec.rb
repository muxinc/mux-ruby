=begin
# Mux Ruby - Copyright 2019 Mux Inc.
# NOTE: This file is auto generated. Do not edit this file manually.
=end

require 'spec_helper'
require 'json'
require 'date'

# Unit tests for MuxRuby::AssetNonStandardInputReasons
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'AssetNonStandardInputReasons' do
  before do
    # run before each test
    @instance = MuxRuby::AssetNonStandardInputReasons.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of AssetNonStandardInputReasons' do
    it 'should create an instance of AssetNonStandardInputReasons' do
      expect(@instance).to be_instance_of(MuxRuby::AssetNonStandardInputReasons)
    end
  end
  describe 'test attribute "video_codec"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "audio_codec"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "video_gop_size"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["high"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.video_gop_size = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "video_frame_rate"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "video_resolution"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "pixel_aspect_ratio"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "video_edit_list"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["non-standard"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.video_edit_list = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "audio_edit_list"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["non-standard"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.audio_edit_list = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "unexpected_media_file_parameters"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["non-standard"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.unexpected_media_file_parameters = value }.not_to raise_error
      # end
    end
  end

end
